<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 引入 database.properties 文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:database.properties"></property>
	</bean>
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
		<property name="driverClassName" value="${driver}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="initialSize" value="${initialSize}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxIdle" value="${maxIdle}"/> 
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxWait" value="${maxWait}"/>
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		<!-- sql心跳 -->
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="validationQuery" value="select 1"/>
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<property name="numTestsPerEvictionRun" value="${maxActive}"/>
	</bean>
	<!-- SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用数据源组件 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 引用MyBatis配置文件的配置 -->
		<property name="configLocation" value="classpath:myBatis-config2.xml"></property>
		<!-- 当mapper文件和映射接口不在同一个类路径下，需要配置该属性 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:cn/app/dao/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- 配置DAO -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.app.dao"></property>
	</bean>

	<!-- service -->
	<!-- <bean id="ser" class="cn.app.dev.service.DevServiceImpl"> <property 
		name="m" ref="devUserMapper"/> </bean> -->
	<context:component-scan base-package="cn.app.service"></context:component-scan>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 事务增强处理 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager"><!-- transaction-manager默认值为"transactionManager" 可以不写 -->
	<tx:attributes>
		<tx:method name="AppSystem*" propagation="REQUIRED" rollback-for="Exception"/>
	</tx:attributes>
	</tx:advice>
	<!-- aop事务处理 -->
	<aop:aspectj-autoproxy/>
	<aop:config>
		<aop:pointcut expression="execution (* *cn.app.dev.service..*(..))" id="transService"/>
		<aop:advisor pointcut-ref="transService" advice-ref="txAdvice"/>
	</aop:config>

</beans>

